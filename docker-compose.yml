services:
  ngrok:
    image: ngrok/ngrok:latest
    command:
      - "http"
      - "http://host.docker.internal:80"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - 4040:4040

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mysql:
    image: mysql
    volumes:
      - ./migration:/docker-entrypoint-initdb.d
      - type: volume
        source: dbdata
        target: /var/lib/mysql
        volume:
          nocopy: true
    restart: always
    ports:
      - 3306:3306
    networks:
      - bot_network
    environment:
      "MYSQL_DATABASE": "${DB_DATABASE}"
      "MYSQL_USER": "${DB_USER}"
      "MYSQL_PASSWORD": "${DB_USER_PASSWORD}"
      "MYSQL_ROOT_PASSWORD": "${DB_PASSWORD}"
      "TZ": "Asia/Taipei"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u $$DB_USER", "-p$$DB_PASSWORD" ]
      timeout: 20s
      retries: 10

  redis:
    image: redis:alpine
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    restart: always
    networks:
      - bot_network
    ports:
      - 6379:6379

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "5278:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    networks:
      - bot_network

volumes:
  dbdata:


networks:
  bot_network:
