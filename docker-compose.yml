version: "3.5"
services:

  nginx:
    image: nginx
    env_file: ./.env
    volumes:
      - ./docker/config:/etc/nginx/conf.d/templates
    networks:
      - bot_network
      - nginx_network
    ports:
      - "80"
    depends_on:
      - bot
      - frontend
    environment:
      - "VIRTUAL_HOST=${APP_DOMAIN}"
      - "VIRTUAL_NETWORK=nginx-proxy"
      - "VIRTUAL_PORT=80"
      - "LETSENCRYPT_HOST=${APP_DOMAIN}"
      - "LETSENCRYPT_EMAIL=${ADMIN_EMAIL}"
    command: /bin/bash -c "envsubst '$$APP_DOMAIN' <
      /etc/nginx/conf.d/templates/redive.dev.template >
      /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      "CHOKIDAR_USEPOLLING": "true"
    expose:
      - 3000
    networks:
      - bot_network
    volumes:
      - ./frontend:/app

  bot:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    env_file: ./.env
    restart: always
    volumes:
      - ./app:/application
    expose:
      - 5000
    depends_on:
      - mysql
      - redis
    networks:
      - bot_network
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"
    environment:
      - "NODE_ENV=development"

  mysql:
    env_file: ./.env
    image: mysql
    volumes:
      - ./migration:/docker-entrypoint-initdb.d
      - type: volume
        source: dbdata
        target: /var/lib/mysql
        volume:
          nocopy: true
    restart: always
    expose:
      - "${DB_PORT}"
    networks:
      - bot_network
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"
    environment:
      "MYSQL_DATABASE": "${DB_DATABASE}"
      "MYSQL_USER": "${DB_USER}"
      "MYSQL_PASSWORD": "${DB_USER_PASSWORD}"
      "MYSQL_ROOT_PASSWORD": "${DB_PASSWORD}"

  redis:
    image: redis:alpine
    command: "redis-server --requirepass ${REDIS_PASSWORD}"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"
    networks:
      - bot_network
    expose:
      - "${REDIS_PORT}"

  crontab:
    build:
      context: ./job
      dockerfile: Dockerfile.dev
    networks:
      - bot_network
    depends_on:
      - mysql
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"
    env_file: ./.env
    environment:
      - "NODE_ENV=development"
    volumes:
      - ./job:/script

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "5278:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    networks:
      - bot_network

  python:
    build: ./opencv
    networks:
      - bot_network
    restart: always
    expose:
      - 3000
    environment:
      PYTHON_MODE: DEBUG
    volumes:
      - ./opencv:/application

networks:
  nginx_network:
    external: true
    name: nginx_network
  bot_network: null

volumes:
  dbdata: null
